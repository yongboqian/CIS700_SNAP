Things controller must do:
0!) Prevent robot from crashing into itself
1!) publish elevator current position
2) move elevator using elevator
3!) get parameters


Todo:

start up publisher to publish position to joint
cmd to always check if limit is switched. maybe go slower if it is and update the position


1) write controller to load elevator and just output position on request


Launch file=> arbotix_driver=> inialize stuff =>init servos (even elevator)=> init controllers=> goes to controller file and calls class?

arbotix driver inits joints publishers and controller and then updates them. io might have to be specified along with new controller


-now: how to set position of elevator

-create a joint that is not a dynamixel and specify that it is driven by the elevator servo?
can i do this


Notes to end day:
-I understand the controller much better now!
- controller skeletonis set up to set speed of elevator motor and to read if
it is safe to move elevator by reading in digital input
- I put a basic directino control in for now to control it use:
rostopic pub -1 /elevator_slider_link/command_direction std_msgs/Float64 0.0
for negative number use -- -1.0
- there are some controller code that i left incase it was important so it may get in the way later
- the config yaml file has been updated to start the elevator joint and link and to publish the limit switch states

-Things to do:
-- finish controller code
--- how to calibrate location. setspeed in down direction until limit is hit. then start recording from there
--- i need to put in limit trips (harware)
--- i need to fix elevator motor
--- come up with code to keep track of elevator position based on speed or position of motor.
--- come up with a way to handle position commands/goals


11/20:
--- Test how position feedback. publish ticks.positions

The servo has a weird mapping.

range of expected values are 0 to 1023
There is a deadband of about 60 degrees in this the encoder will read either 0 1023 or a value around 600 to 700
0 and 1023 might be read for awhile therefore I suggest only saying a value is real if it is greater than 0 or less than 1023. not including thos values.
Also to excluded the skipping values we need to 
speed of 600 units is about 1 rev per second

using speed. if speed jump is >

if i go forward lets assume the position climbs then resets so
1,2,100,800,1023,0,10
delta = current_position -last_position
so delta should be positive
If delta is negative then 

if self.direction == forward and delta_ticks <0
delta_ticks
self.last_position

speed of 600 is fast enough
400 is nice 
200 may be too slow

filter above 2000 for both CW and CCW

1.0 is down elevator need to reverse delta

when the elevator goes up the ticks should decrease.

ASk NIcu about quadrature and/or try speed controller for position

